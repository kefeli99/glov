[tool.poetry]
name = "glov"
version = "0.1.0"
description = "RAG based question answering"
authors = ["Dogukan Kefeli <dogukankefeli@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
langchain = "^0.2.13"
fastapi = {extras = ["standard"], version = "^0.112.0"}
langchain-huggingface = "^0.0.3"
sentence-transformers = "^3.0.1"
langchain-postgres = "^0.0.9"
psycopg2-binary = "^2.9.9"
psycopg = {extras = ["binary", "pool"], version = "^3.2.1"}
langchain-community = "^0.2.12"
langchain-text-splitters = "^0.2.2"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.1"
ruff = "^0.5.7"
pre-commit = "^3.8.0"
poethepoet = "^0.27.0"
types-requests = "^2.32.0.20240712"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff] # https://github.com/astral-sh/ruff
fix = true
line-length = 120
src = ["glov", "tests"]
target-version = "py310"
preview = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["A", "ASYNC", "B", "BLE", "C4", "C90", "D", "DTZ", "E", "EM", "ERA", "F", "FBT", "FLY", "FURB", "G", "I", "ICN", "INP", "INT", "ISC", "LOG", "N", "NPY", "PERF", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "Q", "RET", "RSE", "RUF", "S", "SIM", "SLF", "SLOT", "T10", "T20", "TCH", "TID", "TRY", "UP", "W", "YTT"]
ignore = ["B008", "B009", "B010", "D107", "D203", "D213", "E501", "ISC001", "RET504", "S101", "S307"]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]
pydocstyle.convention = "google"
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["B018", "D100", "D101", "D102", "D103", "D105", "FBT002", "PLC2701", "PLR0904", "PLR0911", "PLR0912", "PLR0913", "PLR0914", "PLR0915", "PLR0916", "PLR0917", "PLR2004", "PLR6301", "PT011", "PTH123", "S301", "S311", "S403", "SLF001", "T201"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy] # https://mypy.readthedocs.io/en/latest/config_file.html
plugins = "pydantic.mypy"
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true


[tool.poe.tasks] # https://github.com/nat-n/poethepoet

  [tool.poe.tasks.lint]
  help = "Lint this package"

    [[tool.poe.tasks.lint.sequence]]
    cmd = """
      pre-commit run
        --all-files
        --color always
      """

  [tool.poe.tasks.test]
  help = "Test this package"

    [[tool.poe.tasks.test.sequence]]
    cmd = "pytest"
